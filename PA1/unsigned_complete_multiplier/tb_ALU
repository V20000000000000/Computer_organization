module ALU (
    output reg [31:0] result,
    output reg carry,
    input [31:0] src1,
    input [31:0] src2,
    input [5:0] funct
);

    wire [31:0] ALU_result;
    wire ALU_carry;

    always @(*)
    begin
        if(funct == 6'b001001) // addu
        begin
            {ALU_carry, ALU_result} = src1 + src2;
        end
        else begin
            ALU_result = 32'b0;
            ALU_carry = 1'b0;
        end
    end
    
    // output assignment
    assign result = ALU_result;
    assign carry = ALU_carry;

endmodule
